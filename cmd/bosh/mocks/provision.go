// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/bosh (interfaces: Provisioner)

// Package mocks is a generated GoMock package.
package mocks

import (
	bosh "code.cloudfoundry.org/cfdev/bosh"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProvisioner is a mock of Provisioner interface
type MockProvisioner struct {
	ctrl     *gomock.Controller
	recorder *MockProvisionerMockRecorder
}

// MockProvisionerMockRecorder is the mock recorder for MockProvisioner
type MockProvisionerMockRecorder struct {
	mock *MockProvisioner
}

// NewMockProvisioner creates a new mock instance
func NewMockProvisioner(ctrl *gomock.Controller) *MockProvisioner {
	mock := &MockProvisioner{ctrl: ctrl}
	mock.recorder = &MockProvisionerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvisioner) EXPECT() *MockProvisionerMockRecorder {
	return m.recorder
}

// FetchBOSHConfig mocks base method
func (m *MockProvisioner) FetchBOSHConfig() (bosh.Config, error) {
	ret := m.ctrl.Call(m, "FetchBOSHConfig")
	ret0, _ := ret[0].(bosh.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchBOSHConfig indicates an expected call of FetchBOSHConfig
func (mr *MockProvisionerMockRecorder) FetchBOSHConfig() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchBOSHConfig", reflect.TypeOf((*MockProvisioner)(nil).FetchBOSHConfig))
}
