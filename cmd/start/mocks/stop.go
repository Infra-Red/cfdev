// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: Stop)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cobra "github.com/spf13/cobra"
	reflect "reflect"
)

// MockStop is a mock of Stop interface
type MockStop struct {
	ctrl     *gomock.Controller
	recorder *MockStopMockRecorder
}

// MockStopMockRecorder is the mock recorder for MockStop
type MockStopMockRecorder struct {
	mock *MockStop
}

// NewMockStop creates a new mock instance
func NewMockStop(ctrl *gomock.Controller) *MockStop {
	mock := &MockStop{ctrl: ctrl}
	mock.recorder = &MockStopMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStop) EXPECT() *MockStopMockRecorder {
	return m.recorder
}

// RunE mocks base method
func (m *MockStop) RunE(arg0 *cobra.Command, arg1 []string) error {
	ret := m.ctrl.Call(m, "RunE", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunE indicates an expected call of RunE
func (mr *MockStopMockRecorder) RunE(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunE", reflect.TypeOf((*MockStop)(nil).RunE), arg0, arg1)
}
