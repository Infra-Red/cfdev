// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: Provision)

// Package mocks is a generated GoMock package.
package mocks

import (
	start "code.cloudfoundry.org/cfdev/cmd/start"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProvision is a mock of Provision interface
type MockProvision struct {
	ctrl     *gomock.Controller
	recorder *MockProvisionMockRecorder
}

// MockProvisionMockRecorder is the mock recorder for MockProvision
type MockProvisionMockRecorder struct {
	mock *MockProvision
}

// NewMockProvision creates a new mock instance
func NewMockProvision(ctrl *gomock.Controller) *MockProvision {
	mock := &MockProvision{ctrl: ctrl}
	mock.recorder = &MockProvisionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvision) EXPECT() *MockProvisionMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockProvision) Execute(arg0 start.Args) error {
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockProvisionMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockProvision)(nil).Execute), arg0)
}
