#!/usr/bin/env bash

set -ex

while getopts "m:" arg; do
  case $arg in
    m) manifest="$OPTARG"
      ;;
  esac
done

if [[ -z $manifest ]]; then
  echo "USAGE: build-bosh-deps-tar -m <path-to-bosh-manifest>"
  exit 2
fi
if [[ ! -f $manifest ]]; then
  echo "ERROR: manifest $manifest does not exist"
  exit 2
fi
manifest="$(cd "$(dirname "$manifest")"; pwd)/$(basename "$manifest")"

if [[ -z "$BOSH_ENVIRONMENT" ]]; then
  echo "ERROR: a bosh director is required to compile releases, please set your BOSH_* env variables"
  exit 3
fi

dir="$(cd "$( dirname $0)" && pwd)"
output_dir="$dir"/../output
releases_dir="$(mktemp -d)"
mkdir -p "$output_dir"
mkdir -p "$releases_dir"
trap cleanup EXIT
export STEMCELL_VERSION="3541.9"

cleanup () {
  rm -rf "$releases_dir"
}

name () {
  echo "$1" | jq -r .name
}

url () {
  echo "$1" | jq -r .url
}

version () {
  echo "$1" | jq -r .version
}

filename () {
  echo "$(name "$1")-$(version "$1")-ubuntu-trusty-$STEMCELL_VERSION.tgz"
}

download_warden_stemcell () {
  pushd "$releases_dir"
    wget "https://s3.amazonaws.com/bosh-core-stemcells/warden/bosh-stemcell-$STEMCELL_VERSION-warden-boshlite-ubuntu-trusty-go_agent.tgz"
  popd
}

download_compiled_releases () {
  compiled_releases="$(rq -y <"$manifest" | jq -c '.releases[] | select(.url | contains("compiled"))')"
  for release in $compiled_releases; do
    wget "$(url "$release")" -O "$releases_dir"/"$(filename "$release")"
  done
}

compilation_manifest_template="$(cat <<EOF
---
instance_groups: []
name: bosh
stemcells:
- alias: default
  os: ubuntu-trusty
  version: $STEMCELL_VERSION
update:
  canaries: 1
  canary_watch_time: 30000-1200000
  max_in_flight: 1
  update_watch_time: 5000-1200000
EOF
)"

compile_releases () {
    releases_to_compile="$(rq -y <"$manifest" | jq '[.releases[] | select(.url | contains("compiled") | not)]')"
    compilation_manifest="$(echo "$compilation_manifest_template" | rq -y | jq ".releases=$releases_to_compile" | rq -Y)"
    bosh upload-stemcell "https://s3.amazonaws.com/bosh-gce-light-stemcells/light-bosh-stemcell-$STEMCELL_VERSION-google-kvm-ubuntu-trusty-go_agent.tgz"
    bosh -n deploy -d bosh <(echo "$compilation_manifest")
    for release in $(echo $releases_to_compile | jq -c .[]) ; do
        bosh -d bosh export-release "$(name "$release")/$(version "$release")" ubuntu-trusty/"$STEMCELL_VERSION" --dir "$releases_dir"
        mv "$releases_dir"/"$(name "$release")-$(version "$release")"-*.tgz "$releases_dir"/"$(filename $release)"
    done
}

finalize_manifest () {
  JQ_FILTER='.releases=(.releases | map(.url=("file:///var/vcap/cache/" + .name + "-" + (.version | tostring) + "-ubuntu-trusty-" + env.STEMCELL_VERSION + ".tgz")))'
  cat "$manifest" | rq -y | jq "$JQ_FILTER" | rq -j -Y > "$releases_dir"/director.yml
}

tar_deps () {
  pushd "$releases_dir"
    tar czf "$output_dir"/bosh.tgz *
  popd
}

main () {
  download_warden_stemcell
  download_compiled_releases
  compile_releases
  finalize_manifest
  tar_deps
}

main
