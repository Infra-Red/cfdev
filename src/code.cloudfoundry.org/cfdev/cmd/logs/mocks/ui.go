// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/logs (interfaces: UI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUI is a mock of UI interface
type MockUI struct {
	ctrl     *gomock.Controller
	recorder *MockUIMockRecorder
}

// MockUIMockRecorder is the mock recorder for MockUI
type MockUIMockRecorder struct {
	mock *MockUI
}

// NewMockUI creates a new mock instance
func NewMockUI(ctrl *gomock.Controller) *MockUI {
	mock := &MockUI{ctrl: ctrl}
	mock.recorder = &MockUIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUI) EXPECT() *MockUIMockRecorder {
	return m.recorder
}

// Say mocks base method
func (m *MockUI) Say(arg0 string, arg1 ...interface{}) {
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Say", varargs...)
}

// Say indicates an expected call of Say
func (mr *MockUIMockRecorder) Say(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Say", reflect.TypeOf((*MockUI)(nil).Say), varargs...)
}
